(start.server)
(start-server)
(liberator-service.repl/start-server)
(quit)
(mooviefishsrv.repl/start-server)
(quit)
(find-doc "mooviefishsrv")
in mooviefish.repl
exit
(use 'mooviefish.repl)
(use 'src/mooviefish.repl)
(quit)
(use 'mooviefish.repl)
(quit)
(use 'mooviefishsrv.repl)
(start-server)
(vars)
(stop-server)
(quit)
(use 'mooviefishsrv.repl')
(use 'mooviefishsrv.repl)
(start-server)
app-routes
mooviefishsrv.handler/app-routes
(print mooviefishsrv.handler/app-routes)
(print mooviefishsrv.handler/app)
(binding [*ns* (or (find-ns 'mooviefishsrv.handler) (find-ns 'user))] (load-string "(defn init []
  (println \"mooviefishsrv is starting\"))"))
(binding [*ns* (or (find-ns 'mooviefishsrv.handler) (find-ns 'user))] (load-string "(defn init []
  (println \"mooviefishsrv is starting\"))"))
(binding [*ns* (or (find-ns 'mooviefishsrv.handler) (find-ns 'user))] (load-string "(defn destroy []"))
(defn init []
  (println "mooviefishsrv is starting"))
(init)
(binding [*ns* (or (find-ns 'mooviefishsrv.routes.home) (find-ns 'user))] (load-string "(defresource home-txt
  :handle-ok \"Welcome to MoovieFish!\"
  :etag \"fixed-etag\" 
  :available-media-types [\"text/plain\"])"))
(binding [*ns* (or (find-ns 'mooviefishsrv-service.routes.home) (find-ns 'user))] (load-string "(defroutes home-routes
  (ANY \"/\" request home-txt)
  (ANY \"/add-movie\" request add-movie)
  (ANY \"/movies\" request get-movies))"))
(use 'mooviefishsrv.routes)
(use 'mooviefishsrv.routes.home)
(binding [*ns* (or (find-ns 'mooviefishsrv.routes.home) (find-ns 'user))] (load-string "(defroutes home-routes
  (ANY \"/\" request home-txt)
  (ANY \"/add-movie\" request add-movie)
  (ANY \"/movies\" request get-movies))"))
(binding [*ns* (or (find-ns 'mooviefishsrv.routes.home) (find-ns 'user))] (load-string "(ns mooviefishsrv.routes.home  
  (:require [compojure.core :refer :all]
            [liberator.core :refer [defresource resource]]
            [cheshire.core :refer [generate-string]]
            [noir.io :as io]
            [clojure.java.io :refer [file]]))"))
(. System exit 0)
> (require ['com.ashafa.clutch :as 'clutch])
> (require [cheshire.core])
> (require ['cheshire.core])
(def db "http://192.168.10.122:5984/clutchtest")
(couch/all-databases db)
(clutch/all-databases db)
(clutch/couchdb-info db)
(clutch/create-database "mvfishtest")
(clutch/create-database db "mvfishtest")
(clutch/create-database db)
(clutch/all-databases db)
(def db "http://192.168.10.122:5984/mvfishtest")
(clutch/all-databases db)
(clutch/create-database db)
(clutch/all-databases db)
(load-file "test/test_movie_list.clj")
movies
(parse-stream movie)
(cheshire.core/parse-stream movie)
(parse-stream movies)
(cheshire.core/parse-stream movies)
(cheshire.core/generate-string movies)
(clutch/with-db db (clutch/bulk-update movies))
(clutch/all-documents db)
(couch/with-db db
  (couch/all-documents {:include_docs true}))
(clutch/all-documents db {:include_docs true})
db
(use [com.ashafa.clutch :as couch])
(use '[com.ashafa.clutch :as couch])
(couch/all-databases)
(def db "http://olegg-linux:5984/mvfishtest")
(couch/all-databases db)
(clutch/create-database db)
(coutch/create-database db)
(couch/create-database db)
(def movies [
{
:shortname"monsters", 
:descriptions [
{
:lang "en" 
:title "Monsters University", 
:desc "A look at the relationship between Mike and Sulley during their days at Monsters University -- when they weren't necessarily the best of friends.",
 :img "monsters.jpg",
 :year-released "2013"
}
{
:lang "ru" 
:title "  (2013)", 
:desc "        ,      .    ,       .      ,            .",
 :img "monsters.jpg"
 :year-released "2013"
}
]
  :translations [
  {
 :lang "ru", 
 :title "", 
 :desc "From original dvd", 
 :img nil 
 }
  {
  :lang "he", 
  :title "", 
  :desc "From original dvd", 
  :img nil 
  }
  ]
    }
    {
:shortname "smurfs", 
:descriptions [
{
:lang "en"  
:title "The Smurfs", 
:desc "When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world into New York City.",
 :img "smurfs.jpg",
 :year-released "2011"
}
]
  :translations [
  {
 :lang "ar", 
 :title "Arabic", 
 :desc "From original dvd", 
 :img nil 
 }
  {
  :lang "he", 
  :title "", 
  :desc "From original dvd", 
  :img nil 
  }
  ]
   }
   {
:shortname "despicableme2", 
:descriptions [
{
:lang "en"  
:title "Despicable Me 2", 
:desc "Gru is recruited by the Anti-Villain League to help deal with a powerful new super criminal.",
 :img "despicableme2.jpg",
 :year-released "2013"
}
]
  :translations [
  {
 :lang "ru", 
 :title "", 
 :desc "From original dvd", 
 :img nil 
 }
  {
  :lang "he", 
  :title "", 
  :desc "From original dvd", 
  :img nil 
  }
  ]
   }
   ])
(couch/with-db db (clutch/bulk-update movies))
(couch/with-db db (couch/bulk-update movies))
(couch/all-documents db {:include_docs true})
(quit)
