{a: #{}}
(def aa {a: #{}})
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(prn "aaaaa")
(aquire-movie "114" "1001")
(aquire-movie "113" "1001")
(aquire-movie "112" "1001")
(prn @users)
(assoc-in @users [112 :mids] 1001)
(assoc-in @users [112 :mids] 1002)
(assoc-in @users [112 :mids] 1003)
(assoc-in @users [112 :mids] (conj 1003))
(swap! users assoc-in [112 :mids] 1001)
(swap! users assoc-in [112 :mids] 1002)
(swap! users update-in [112 :mids] conj 1001)
(conj #{} 1001)
(conj #{} 1002)
(conj #{1001} 1002)
(prn @users)
(update-in @users [112 :mid] conj 1001)
(prn @users)
(swap! @users update-in [112 :mid] conj 1001)
(swap! users update-in [112 :mid] conj 1001)
(swap! users update-in [112 :mids] conj 1001)
(update-in @users [112 :mids] conj 1001)
(update-in @users [112 :mids] assoc 1001)
(update-in @users [112 :mids] conj 1001)
(get-in @users [112 :mids])
(prn @users)
(update-in @users [113 :mids] conj 1001)
(update-in @users [113 :mids] conj 1002)
(update-in @users [113 :mids] conj 1001)
(swap! users update-in [114 :mids] conj 1001)
(swap! users update-in [114 :mids] conj 1002)
(swap! users update-in [114 :mids] conj 1004)
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(prn  @users)
(aquire-movie "110" "1001")
(aquire-movie "110" "1002")
(aquire-movie "110" "1003")
(aquire-movie "111" "1003")
(aquire-movie "111" "1001")
(prn  @users)
(use 'mooviefishsrv.models.db :reload-all)
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(aquire-movie "111" "1001")
(aquire-movie "111" "1002")
(aquire-movie "111" "1003")
(swap! users update-in [111 :mids] conj 1004)
@users
(swap! users update-in [111 :mids] conj 1002)
@users
(aquire-movie "111" 1003)
(aquire-movie "111" "1007")
(prn @users)
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(aquire-movie "111" 1003)
(aquire-movie "111" "1003")
(aquire-movie "111" "1002")
(use 'mooviefishsrv.models.db :reload-all)
(aquire-movie "111" "1002")
(aquire-movie "111" "1003")
(aquire-movie "111" "1004")
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(aquire-movie "111" "1004")
(aquire-movie "111" "1003")
(aquire-movie "111" "1002")
(aquire-movie "111" "1001")
(prn @utils)
(prn @users)
(aquire-movie "112" "1001")
(prn @users)
(quit)
(aquire-movie "112" "1001")
(use 'mooviefishsrv.models.db :reload-all)
(aquire-movie "112" "1001")
(aquire-movie "112" "1002")
(prn @users)
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(aquire-movie "112" "1002")
(acquire-movie "112" "1002")
(acquire-movie "112" "1003")
(prn @users)
(quit)
(defn now [] (new java.util.Date))
now
(use 'mooviefishsrv.models.db :reload-all)
(time/now)
(use 'mooviefishsrv.models.db :reload-all)
(time/now)
time/now
(quit)
(time/now)
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(acquire-movie "112" "1003")
(time-format/formatters :basic-date-time)
(use 'mooviefishsrv.models.db :reload-all)
(time-format/formatters :basic-date-time)
(require '[clj-time.format :as f])
(f/show-formatters)
(def built-in-formatter (f/formatters :basic-date-time))
(acquire-movie "112" "1002")
(time/now)
(quit)
(assoc {a: 1} 2}
(assoc {} a: 2}
(assoc {} a: 2)
{}
(assoc {} a: 2)
(assoc {} a 2)
(assoc {} a: 2)
(assoc {} :a 2)
(assoc {} :a 3)
(assoc {} :a 4)
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(acquire-movie "112" "1002")
(prn @users)
(acquire-movie "112" "1003")
(prn @users)
(quit)
(acquire-movie "112" "1003")
(use 'mooviefishsrv.models.db :reload-all)
(acquire-movie "112" "1003")
(prn @users)
(get-in users [112 :mids])
(get-in users [112 :mids 1003] )
(get-in users [112])
(get-in @users [112])
(get-in @users [112 :mids])
(get-in @users [112 :mids] 1003)
(if-let [m (get-in @users [112 :mids] 1003)] "yes" "no")
(if-let [m (get-in @users [112 :mids] 1002)] "yes" "no")
(get-in @users [112 :mids] 1002)
(get-in @users [112 :mids 1002])
(get-in @users [112 :mids 1003])
(if-let [m (get-in @users [112 :mids 1002])] "yes" "no")
(if-let [m (get-in @users [112 :mids 1003])] "yes" "no")
(if-let [m (get-in @users [112 :mids 1003])] m m)
(if-let [m (get-in @users [112 :mids 1003])] m )
(if-let [m (get-in @users [112 :mids 1002])] m )
(if-let [m (get-in @users [112 :mids 1002])] m "no")
(if-let [m (get-in @users [112 :mids 1003])] m "no")
(if-let [m (get-in @users [112 :mids 1003])] (conj (:date m) "aaa") "no")
(if-let [m (get-in @users [112 :mids 1003])] (conj {:date m} "aaa") "no")
(if-let [m (get-in @users [112 :mids 1003])] m "no")
(def q (if-let [m (get-in @users [112 :mids 1003])] m "no"))
q
(:date q)
(conj (:date q) "qqq")
#{time/now}
#{(time/now)}
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(acquire-movie "112" "1003")
(prn @users)
(acquire-movie "112" "1003")
(prn @users)
(acquire-movie "112" "1002")
(prn @users)
(acquire-movie "111" "1002")
(prn @users)
(use 'mooviefishsrv.models.db :reload-all)
(acquire-movie "111" "1002")
(prn @users)
(acquire-movie "111" "1002")
(prn @users)
(acquire-movie "111" "1002")
(prn @users)
(quit)
(acquire-movie "111" "1002")
(use 'mooviefishsrv.models.db :reload-all)
(acquire-movie "111" "1002")
(prn @users)
(acquire-movie "111" "1002")
(acquire-movie "111" "1003")
(acquire-movie "111" "1004")
(prn @users)
(acquire-movie "111" "1004")
(prn @users)
(use 'mooviefishsrv.models.db :reload-all)
(prn @users)
(acquire-movie "111" "1004")
(prn @users)
(acquire-movie "111" "1004")
(prn @users)
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(acquire-movie "111" "1004")
(prn @users)
(use 'mooviefishsrv.models.db :reload-all)
(acquire-movie "111" "1004")
(prn @users)
(get-in users 111 :mids 1004)
(get-in users [111 :mids 1004])
(get-in users [111 :mids])
(get-in users [111])
(get-in @users [111])
(get-in @users [111 :mids])
(get-in @users [111 :mids 1004])
(use 'mooviefishsrv.models.db :reload-all)
(prn @users)
(acquire-movie "111" "1004")
(prn @users)
(use 'mooviefishsrv.models.db :reload-all)
(prn @users)
(acquire-movie "111" "1004")
(prn @users)
(acquire-movie "111" "1004")
(prn @users)
(acquire-movie "111" "1004")
(prn @users)
(acquire-movie "111" "1004")
(prn @users)
(acquire-movie "111" "1004")
(prn @users)
(use 'mooviefishsrv.models.db :reload-all)
(prn @users)
(acquire-movie "111" "1004")
(prn @users)
(acquire-movie "111" "1004")
(prn @users)
(acquire-movie "111" "1004")
(prn @users)
(use 'mooviefishsrv.models.db :reload-all)
(acquire-movie "111" "1004")
(prn @users)
(acquire-movie "112" "1004")
(prn @users)
(get-movies "en")
(load-movies)
(load-movies-data)
(get-movies "en")
(quit)
(use 'mooviefishsrv.routes.home  :reload-all)
(get-movies "en")
(prn (get-movies "en"))
(:handle-ok (get-movies "en"))
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-user 22)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-user 22)
(add-movie-to-user1 11 1001)
(add-movie-to-user1 11 1002)
(add-movie-to-user1 11 1003)
(add-movie-to-user1 11 1004)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user1 11 1001)
(def m (get-in @users [11 :mids mid]))
(def m (get-in @users [11 :mids 1001]))
m
(def u (get-in @users [11]))
u
(add-user 22)
(def m (get-in @users [11 :mids 1001])
)
m
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(def u (@users 11))
u
(def ms (u :mids))
ms
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(@users 11)
(:mids (@users 11))
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user2 11 1004)
(:mids (@users 11))
(prn (:mids (@users 11)))
(use 'mooviefishsrv.models.db :reload-all)
(add-movie-to-user2 11 1004)
(add-user 11)
(add-movie-to-user2 11 1004)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user2 11 1004)
(use 'mooviefishsrv.models.db :reload-all)
(add-movie-to-user2 11 1004)
(add-user 11)
(add-movie-to-user2 11 1004)
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user2 11 1004)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user2 11 1004)
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user2 11 1004)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user2 11 1004)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user2 11 1004)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user2 11 1004)
(conj [] 1)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user2 11 1004)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user2 11 1004)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user2 11 1004)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user2 11 1004)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user2 11 1004)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user3 11 1004)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(add-movie-to-user3 11 1004)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(update-users-with-movie 11 1004)
(prn @users)
(update-users-with-movie1 11 1004)
(use 'mooviefishsrv.models.db :reload-all)
(add-user 11)
(update-users-with-movie1 11 1004)
(prn @users)
(use 'mooviefishsrv.models.db :reload-all)
(prn @users)
(add-user 11)
(update-users-with-movie1 11 1004)
(prn @users)
(update-users-with-movie1 11 1004)
(prn @users)
(use 'mooviefishsrv.models.db :reload-all)
(update-users-with-movie1 11 1004)
(prn @users)
(update-users-with-movie1 11 1004)
(prn @users)
(update-users-with-movie1 11 1004)
(update-users-with-movie1 11 1001)
(prn @users)
(update-users-with-movie1 11 1001)
(use 'mooviefishsrv.models.db :reload-all)
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(prn @users)
(update-users-with-movie 11 1001)
(prn @users)
(add-user 11)
(update-users-with-movie 11 1001)
(prn @users)
(update-users-with-movie 11 1001)
(use 'mooviefishsrv.models.db :reload-all)
(prn @users)
(update-users-with-movie 11 1001)
(prn @users)
(update-users-with-movie 11 1001)
(update-users-with-movie 12 1001)
(prn @users)
(update-users-with-movie 13 1001)
(prn @users)
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(update-users-with-movie 11 1001)
(prn @users)
(update-users-with-movie 11 1001)
(update-users-with-movie 12 1001)
(update-users-with-movie 12 1002)
(store-users "mm")
(use 'mooviefishsrv.models.db :reload-all)
(prn @users)
(store-users users-data)
(use 'mooviefishsrv.models.db :reload-all)
(store-users users-data)
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(store-users users-data)
(use 'mooviefishsrv.models.db :reload-all)
(store-users users-data)
(use 'mooviefishsrv.models.db :reload-all)
(store-users users-data)
(update-users-with-movie 12 1002)
(store-users users-data)
(use 'mooviefishsrv.models.db :reload-all)
(update-users-with-movie 12 1002)
(store-users users-data)
(use 'mooviefishsrv.models.db :reload-all)
(store-users users-data)
(update-users-with-movie 12 1002)
(store-users users-data)
(use 'mooviefishsrv.models.db :reload-all)
(store-users users-data)
(update-users-with-movie 12 1002)
(store-users users-data)
(use 'mooviefishsrv.models.db :reload-all)
(store-users users-data)
(use 'mooviefishsrv.models.db :reload-all)
(store-users users-data)
(update-users-with-movie 12 1002)
(store-users users-data)
(update-users-with-movie 11 1002)
(update-users-with-movie 13 1002)
(store-users users-data)
(use 'mooviefishsrv.models.db :reload-all)
(store-movies "data/aaa.data")
(load-movies movies-data)
(store-movies "data/aaa.data")
(use 'mooviefishsrv.models.db :reload-all)
(load-movies movies-data)
(store-movies "data/aaa.data")
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(update-users-with-movie 13 1002)
(update-users-with-movie 11 1002)
(prn @users)
(fipp @users)
(def uuu (fipp @users))
uuu
(fipp @movies)
(load-movies-data)
(fipp @movies)
(fipp @users)
(use 'mooviefishsrv.models.db :reload-all)
(update-users-with-movie 11 1002)
(update-users-with-movie 12 1002)
(update-users-with-movie 13 1002)
(store-users users-data)
(load-users-data)
time/naow
(time/now)
(clj.time.core/now)
(clj-time.core/now)
(clj-time.formaters/show-formaters)
(clj-time.format/show-formaters)
(clj-time.format/show-formatters)
(clj-time.format/unparse :date-hour-minute-second (clj.time.core/now))
(clj-time.format/unparse :date-hour-minute-second (clj-time.core/now))
(clj-time.format/unparse clj-format/date-hour-minute-second (clj-time.core/now))
(clj-time.format/unparse clj-time.format/date-hour-minute-second (clj-time.core/now))
(clj-time.format/unparse (clj-time.format/formatters :basic-date-time) (clj-time.core/now))
(clj-time.format/unparse (clj-time.format/formatters :date-hour-minute-second) (clj-time.core/now))
(use 'mooviefishsrv.models.db :reload-all)
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(update-users-with-movie 13 1002)
(update-users-with-movie 14 1002)
(update-users-with-movie 15 1002)
(ffip @users)
(store-users users-data)
(load-users users-data)
(use 'mooviefishsrv.models.db :reload-all)
(prn @users)
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(prn @users)
(load-users users-data)
(prn @users)
(quit)
(use 'mooviefishsrv.models.db :reload-all)
(load-users-data)
(update-users-with-movie 117 1002)
(update-users-with-movie 117 1005)
(update-users-with-movie 117 1007)
(store-users-data)
(load-users-data)
(prn  @users)
(update-users-with-movie 117 1007)
(use 'mooviefishsrv.models.db :reload-all)
(prn  @users)
(load-users-data)
(prn  @users)
(update-users-with-movie 11 1007)
(store-users-data)
(update-users-with-movie 11 1007)
(use 'mooviefishsrv.models.db :reload-all)
(load-movies-data)
(prn @movies)
(quit)
